cache-path: ${env.HOME}/.config/pantheon-upstream
working-copy-path: ${env.HOME}/pantheon/update-working-copies
log:
  path: ${env.HOME}/.update-tool/pr.log
github:
  default-user: update-tool
  personal-auth-token:
    # This is a read-only token for pantheon-upstream
    pantheon-upstream:
      path: ${cache-path}/github-token
    # This is a read/write token for pantheon-upstream
    updatinate:
      path: ${cache-path}/updatinate-token
    # This is a read-only token for pantheon-circleci
    pantheon-circleci:
      path: ${cache-path}/pantheon-circleci-token
    me:
      path: ${env.HOME}/.github-token
php-net:
  download-url: https://php.net/distributions/php-{version}.tar.gz
wp-cli-gh:
  api-url: https://api.github.com/repos/wp-cli/wp-cli/releases/latest
  download-url: https://github.com/wp-cli/wp-cli/releases/download/v{version}/wp-cli-{version}.phar
drush-gh:
  api-url: https://api.github.com/repos/drush-ops/drush/releases
  download-url: https://github.com/drush-ops/drush/archive/refs/tags/{version}.zip
composer-gh:
  api-url: https://api.github.com/repos/composer/composer/releases

projects:
  cos-php:
    repo: git@github.com:pantheon-systems/cos-runtime-php.git
    path: ${working-copy-path}/cos-php
    #fork: git@github.com:pantheon-circleci/cos-runtime-php.git
  cos-clis:
    repo: git@github.com:pantheon-systems/cos-framework-clis.git
    path: ${working-copy-path}/cos-framework-clis
    main-branch: master
  wp:
    repo: git@github.com:pantheon-systems/WordPress.git
    path: ${working-copy-path}/WordPress
    main-branch: default
    tag-branch: master
    upstream:
      project: WordPress
      major: '[4-9]'
      version-pattern: '#.#.-'
      update-method: WpCliUpdate
      update-parameters:
        # Not used by the WPCliUpdate, but recorded here for documentation purposes
        platform-additions:
          - .gitignore
          - README.md
          - pantheon.upstream.yml
          - wp-config.php
          - wp-content/mu-plugins/pantheon
      update-filters:
        - CopyPlatformAdditions
    pr:
      instructions: |
        Update from WordPress {{original-version}} to WordPress {{update-version}}.

        Before merging this PR, check the [build results on CircleCI](https://circleci.com/gh/pantheon-systems/WordPress), and then visit the test site and confirm that the correct version of WordPress was, in fact, installed and tested.

        Optionally, you may also create your own test site:

          - Create a new WordPress site on Pantheon.
          - When site creation is finished, visit dashboard.
          - Switch to "git" mode.
          - Clone your site locally.
          - Apply the files from this PR on top of your local checkout.
            - git remote add {{project}} {{project-url}}
            - git fetch {{project}}
            - git merge {{project}}/{{branch}}
          - Push your files back up to Pantheon.
          - Switch back to sftp mode.
          - Visit your site and step through the installation process.
  wp-4:
    repo: git@github.com:pantheon-systems/WordPress.git
    path: ${working-copy-path}/WordPress-4.x
    main-branch: 4.x
    upstream:
      project: WordPress
      major: 4
      version-pattern: '#.#.-'
      update-method: WpCliUpdate
    pr:
      instructions: |
        Update from WordPress {{original-version}} to WordPress {{update-version}}.

        Before merging this PR, check the [build results on CircleCI](https://circleci.com/gh/pantheon-systems/WordPress), and then visit the test site and confirm that the correct version of WordPress was, in fact, installed and tested.

        Optionally, you may also create your own test site:

          - Create a new WordPress site on Pantheon.
          - When site creation is finished, visit dashboard.
          - Switch to "git" mode.
          - Clone your site locally.
          - Apply the files from this PR on top of your local checkout.
            - git remote add {{project}} {{project-url}}
            - git fetch {{project}}
            - git merge {{project}}/{{branch}}
          - Push your files back up to Pantheon.
          - Switch back to sftp mode.
          - Visit your site and step through the installation process.
  wp-test:
    repo: git@github.com:pantheon-fixtures/pantheon-wp-fixture.git
    path: ${working-copy-path}/WordPress
    main-branch: default
    upstream:
      project: WordPress
      major: '[4-9]'
      version-pattern: '#.#.-'
      update-method: WpCliUpdate
  wordpress-composer:
    repo: git@github.com:pantheon-systems/wordpress-composer.git
    path: ${working-copy-path}/wordpress-composer
    source:
      project: wp
      version-pattern: '^5||^6'
      update-parameters:
        rsync:
          options: '-ravz --delete'
          exclusions:
            - .git
        unwanted:
          - wp-config.php
      update-filters:
        - RsyncFromSource
        - CopyTemplateAdditions
        - RemoveUnwanted
  wordpress-network:
    repo: git@github.com:pantheon-systems/wordpress-network.git
    path: ${working-copy-path}/wordpress-network
    main-branch: master
    source:
      project: wp
      version-pattern: '^5||^6'
      branch: master
  drops-7-composer:
    repo: git@github.com:pantheon-systems/drops-7-composer.git
    path: ${working-copy-path}/drops-7-composer
    source:
      project: drops-7
      version-pattern: '^7'
      update-filters:
        - RsyncFromSource
        - CopyTemplateAdditions
  drops-8-scaffolding:
    repo: git@github.com:pantheon-systems/drops-8-scaffolding.git
    path: ${working-copy-path}/drops-8-scaffolding
    source:
      project: drops-8
      version-pattern: '^8.6'
      update-parameters:
        rsync:
          options: '-ravz --delete'
          exclusions:
            - .git
            - core
            - vendor
            - composer.lock
      update-filters:
        - RsyncFromSource
        - RenameProject
  drops-8:
    repo: git@github.com:pantheon-systems/drops-8.git
    path: ${working-copy-path}/drops-8
    main-branch: default
    tag-branch: master
    upstream:
      project: drupal
      major: 8
      update-method: SingleCommit
      update-parameters:
        platform-additions:
          - .circleci
          - .drush-lock-update
          - .gitignore
          - pantheon.upstream.yml
          - drush/example.drushrc.php
          - sites/default/config/.htaccess
          - sites/default/config/README.txt
          - sites/default/default.services.pantheon.preproduction.yml
          - sites/default/settings.pantheon.php
          - sites/default/settings.php
        platform-patches:
          'version reporting': "https://www.drupal.org/files/issues/2021-05-18/3213482-9.patch"
      update-filters:
        - OptimizeAutoloader
        - CopyPlatformAdditions
        - ApplyPlatformPatches
        - RemoveDrupalOrgPackagingInfo
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        Before merging this PR, check the [build results on CircleCI](https://circleci.com/gh/pantheon-systems/drops-8), and then visit the test site and confirm that the correct version of Drupal was, in fact, installed and tested.

        Optionally, you may also create your own test site:

          - Create a new Drupal 8 site on Pantheon.
          - When site creation is finished, visit dashboard.
          - Switch to "git" mode.
          - Clone your site locally.
          - Apply the files from this PR on top of your local checkout.
            - git remote add {{project}} {{project-url}}
            - git fetch {{project}}
            - git merge {{project}}/{{branch}}
          - Push your files back up to Pantheon.
          - Switch back to sftp mode.
          - Visit your site and step through the installation process.
  # This target must be updated when a new minor version of Drupal comes out.
  #   - Update the "upstream.major" item to the previous minor branch, e.g. 8.8
  #   - Reset the branch 'previous-minor' in drops-8:
  #     - git checkout master
  #     - git checkout -B previous-minor 8.8.6 # Update to latest previous minor release
  #     - git push --force origin previous-minor
  # Then, commit the change to this file and make a new release as described in the README.
  drops-8-previous:
    repo: git@github.com:pantheon-systems/drops-8.git
    path: ${working-copy-path}/drops-8
    main-branch: previous-minor
    upstream:
      project: drupal
      major: '8\.8'
      update-method: SingleCommit
      update-parameters:
        platform-additions:
          - .drush-lock-update
          - .gitignore
          - pantheon.upstream.yml
          - drush/example.drushrc.php
          - sites/default/config/.htaccess
          - sites/default/config/README.txt
          - sites/default/default.services.pantheon.preproduction.yml
          - sites/default/settings.pantheon.php
          - sites/default/settings.php
      update-filters:
        - OptimizeAutoloader
        - CopyPlatformAdditions
        - RemoveDrupalOrgPackagingInfo
        - ApplyCircleTests
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        DO NOT MERGE THIS PR.

        Instead:

        - check the [build results on CircleCI](https://circleci.com/gh/pantheon-systems/drops-8)
        - Visit the test site and confirm that the correct version of Drupal was, in fact, installed and tested.
        - Cherry-pick commit ~2 onto the previous-minor branch
        - Tag and push manually
  drupal-9-branch-on-drops-8:
    repo: git@github.com:pantheon-systems/drops-8.git
    path: ${working-copy-path}/drupal-9-branch-on-drops-8
    # fork: git@github.com:greg-1-anderson/drops-8.git
    main-branch: default-9.x
    upstream:
      project: drupal
      major: 9
      update-method: SingleCommit
      update-preamble: "Update to Drupal 9"
      update-parameters:
        allow-pre-release: false
        platform-additions:
          - .circleci
          - .drush-lock-update
          - .gitignore
          - pantheon.upstream.yml
          - drush/example.drushrc.php
          - sites/default/config/.htaccess
          - sites/default/config/README.txt
          - sites/default/default.services.pantheon.preproduction.yml
          - sites/default/settings.pantheon.php
          - sites/default/settings.php
        platform-patches:
          'db version': "https://raw.githubusercontent.com/stevector/drupal-9-project/master/patches/issue-2--mariadb-version.patch"
      update-filters:
        - OptimizeAutoloader
        - CopyPlatformAdditions
        - ApplyPlatformPatches
        - RemoveDrupalOrgPackagingInfo
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        This is experimental. Do not merge.
  drupal-9-branch-web-docroot-wip:
    repo: git@github.com:pantheon-systems/drops-8.git
    path: ${working-copy-path}/drupal-9-branch-on-drops-8
    # fork: git@github.com:greg-1-anderson/drops-8.git
    main-branch: default-9.x
    upstream:
      project: drupal
      major: 9
      update-method: SingleCommit
      update-parameters:
        allow-pre-release: true
        platform-additions:
          - .circleci
        scaffold-allowed-packages:
          - pantheon-systems/drupal-integrations
        composer-dependencies:
          pantheon-systems/drupal-integrations: ^9.0.0-alpha2
        platform-patches:
          'db version': "https://raw.githubusercontent.com/stevector/drupal-9-project/master/patches/issue-2--mariadb-version.patch"
      update-filters:
        - OptimizeAutoloader
        - CopyPlatformAdditions
        - AddComposerDependencies
        - ApplyPlatformPatches
        - RemoveDrupalOrgPackagingInfo
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        This is experimental. Do not merge.
  drops-7:
    repo: git@github.com:pantheon-systems/drops-7.git
    path: ${working-copy-path}/drops-7
    main-branch: default
    tag-branch: master
    upstream:
      project: drupal
      major: 7
      version-pattern: '#.#'
      update-message: Update to Drupal {version}.
      update-method: DiffPatch
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        Before merging this PR, check the [build results on CircleCI](https://circleci.com/gh/pantheon-systems/drops-7), and then visit the test site and confirm that the correct version of Drupal was, in fact, installed and tested.

        Optionally, you may also create your own test site:

          - Create a new Drupal 7 site on Pantheon.
          - When site creation is finished, visit dashboard.
          - Switch to "git" mode.
          - Clone your site locally.
          - Apply the files from this PR on top of your local checkout.
            - git remote add {{project}} {{project-url}}
            - git fetch {{project}}
            - git merge {{project}}/{{branch}}
          - Push your files back up to Pantheon.
          - Switch back to sftp mode.
          - Visit your site and step through the installation process.
  drops-7-from-pressflow:
    repo: git@github.com:pantheon-systems/drops-7.git
    path: ${working-copy-path}/drops-7
    main-branch: default
    tag-branch: master
    upstream:
      project: pressflow7
      major: 7
      version-pattern: '#.#'
      tag-prefix: 'pressflow-'
      update-message: Update to Drupal {version}.
      update-method: SingleCommit
      update-parameters:
        platform-additions:
          - .circleci
          - .drush-lock-update
          - .gitignore
          - pantheon.upstream.yml
          - misc/healthchecks/
          - profiles/pantheon/
          - modules/pantheon/
        platform-patches:
          - https://raw.githubusercontent.com/pantheon-systems/drops-7/patches/drops-7-pantheon.patch
      update-filters:
        - CopyPlatformAdditions
        - ApplyPlatformPatches
        - RemoveDrupalOrgPackagingInfo
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        Before merging this PR, check the [build results on CircleCI](https://circleci.com/gh/pantheon-systems/drops-7), and then visit the test site and confirm that the correct version of Drupal was, in fact, installed and tested.

        Optionally, you may also create your own test site:

          - Create a new Drupal 7 site on Pantheon.
          - When site creation is finished, visit dashboard.
          - Switch to "git" mode.
          - Clone your site locally.
          - Apply the files from this PR on top of your local checkout.
            - git remote add {{project}} {{project-url}}
            - git fetch {{project}}
            - git merge {{project}}/{{branch}}
          - Push your files back up to Pantheon.
          - Switch back to sftp mode.
          - Visit your site and step through the installation process.
  drops-6:
    repo: git@github.com:pantheon-systems/drops-6.git
    path: ${working-copy-path}/drops-6
    main-branch: master
    upstream:
      project: d6lts
      major: 6
      version-pattern: '#.#'
      update-message: Update to Drupal {version}.
      update-method: SingleCommit
      update-parameters:
        platform-additions:
          - .drush-lock-update
          - .gitignore
          - pantheon.upstream.yml
          - misc/favicon.ico
          - misc/healthchecks/
          - modules/pantheon/
          - themes/garland/logo.png
          - themes/garland/minnelli/logo.png
        platform-patches:
          - https://raw.githubusercontent.com/pantheon-systems/drops-6/patches/drops-6-pantheon.patch
      update-filters:
        - CopyPlatformAdditions
        - ApplyPlatformPatches
        - RemoveDrupalOrgPackagingInfo
    pr:
      instructions: |
        Update from Drupal {{original-version}} to Drupal {{update-version}}.

        To test:

          - Create a new Drupal 6 site on Pantheon.
          - When site creation is finished, visit dashboard.
          - Switch to "git" mode.
          - Clone your site locally.
          - Apply the files from this PR on top of your local checkout.
            - git remote add {{project}} {{project-url}}
            - git fetch {{project}}
            - git merge {{project}}/{{branch}}
          - Push your files back up to Pantheon.
          - Switch back to sftp mode.
          - Visit your site and step through the installation process.
  pressflow7:
    repo: git@github.com:pressflow/7.git
    path: ${working-copy-path}/pressflow7
    upstream:
      project: drupal
      major: 7
      version-pattern: '#.#'
      update-method: MergeUpstreamBranch
    release-node:
      template: 'https://www.drupal.org/project/drupal/releases/{version}'
  pressflow6:
    repo: git@github.com:pressflow/6.git
    path: ${working-copy-path}/pressflow6
    main-branch: master
    upstream:
      project: d6lts
      major: 6
      version-pattern: '#.#'
      update-method: MergeUpstreamBranch
    release-node:
      # We would prefer:
      #    template: 'https://github.com/pressflow/6/releases/tag/{tag}'
      # However, the release node does not have a reference to the tag.
      template: 'https://github.com/pressflow/6/releases/tag/pressflow-{version}'
  d6lts:
    repo: git@github.com:d6lts/drupal.git
    path: ${working-copy-path}/d6lts
    release-node:
      template: 'https://github.com/d6lts/drupal/releases/tag/{version}'
  drupal:
    repo: https://git.drupalcode.org/project/drupal.git
    path: ${working-copy-path}/drupal
    release-node:
#      url: https://www.drupal.org/project/drupal
#      pattern: '"(https://www.drupal.org/project/drupal/releases/{major}[0-9.]*)"'
      template: 'https://www.drupal.org/project/drupal/releases/{version}'
    download:
      url: 'https://ftp.drupal.org/files/projects/drupal-{version}.tar.gz'

  WordPress:
    repo: git@github.com:WordPress/WordPress.git
    path: ${working-copy-path}/WordPressUpstream
    main-branch: master
    version-api:
      url: https://api.wordpress.org/core/version-check/1.7/
    release-node:
      atom: 'https://wordpress.org/news/category/releases/feed/atom/'

  composer-scaffold:
    repo: git@github.com:pantheon-systems/composer-scaffold.git
    path: ${working-copy-path}/composer-scaffold
    main-branch: 1.x
    base-branch: base
    commit-preamble: Synchronize with upstream package
    pr-title-preamble: "Update composer-scaffold to match upstream commit:"
    tracking-file: upstream-hash
    upstream:
      repo: git@github.com:drupal/core-composer-scaffold.git
      branch: 9.4.x

plugins:
  wp-launch-check:
    repo: https://github.com/pantheon-systems/wp_launch_check
    path: ${working-copy-path}/wp-launch-check
    main-branch: main
    commit-preamble: Bump WP Core version
    version-api:
      url: https://api.wordpress.org/core/stable-check/1.0/
    file-to-check: features/general.feature
    query-string: --version=